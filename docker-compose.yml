version: '2'
networks:
  srv:
  gitlab:

services:
  traefik:
    image: traefik:1.7.12
    command: >
     --api
     --api.statistics
    restart: always
    ports:
      - '80:80'
      - '443:443'
    expose:
      - '8080'
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.port=8080'
      - 'traefik.frontend.rule=Host:traefik.${SITE}'
      - 'traefik.frontend.auth.basic.users=${USERNAME}:${HASHED_PASSWORD}'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './traefik/traefik.toml:/traefik.toml'
      - './traefik/acme.json:/acme.json'
      - './traefik/logs:/logs'

  logstash:
    image: docker.elastic.co/logstash/logstash:7.1.0
    links:
      - elasticsearch
    volumes:
      - './logstash/:/usr/share/logstash/pipeline/'
      - './traefik/logs:/var/log/traefik'
      - './nginx/logs:/var/log/nginx'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0
    environment:
      - 'cluster.name=docker-cluster'
      - 'bootstrap.memory_lock=true'
      - 'discovery.type=single-node'
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: docker.elastic.co/kibana/kibana:7.1.0
    links:
      - elasticsearch
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:kibana.${SITE}'
      - 'traefik.port=5601'
      - 'traefik.frontend.auth.basic.users=${USERNAME}:${HASHED_PASSWORD}'

  gitlab:
    image: 'gitlab/gitlab-ce:latest'
    restart: always
    hostname: 'gitlab.${SITE}'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.${SITE}:80'
        gitlab_rails['gitlab_shell_ssh_port'] = 2224
    ports:
      - '2224:22'
    volumes:
      - './gitlab/config:/etc/gitlab'
      - './gitlab/logs:/var/log/gitlab'
      - './gitlab/data:/var/opt/gitlab'
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:gitlab.${SITE}'
      - 'traefik.port=80'

  runner:
    image: gitlab/gitlab-runner:latest
    restart: always
    volumes:
      - './gitlab/runner:/etc/gitlab-runner'
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      - gitlab
    links:
      - gitlab
    labels:
      - 'traefik.enable=false'

  nginx:
    image: nginx:stable-alpine
    volumes:
      - './nginx/conf:/etc/nginx/conf.d'
      - './nginx/logs:/var/log/nginx/'
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:${SITE}'
      - 'traefik.port=80'

  transmission:
    image: linuxserver/transmission:2.94-r1-ls12
    restart: always
    environment:
      - 'PGID=1000'
      - 'PUID=1000'
      - 'TZ=Europe/Paris'
    ports:
      - '51413:51413'
      - '51413:51413/udp'
    volumes:
      - './transmission/config:/config'
      - './transmission/downloads:/downloads'
      - './transmission/watch:/watch'
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:torrent.${SITE}'
      - 'traefik.port=9091'
      - 'traefik.frontend.auth.basic.users=${USERNAME}:${HASHED_PASSWORD}'

  video:
    image: gkiko/streama:v1.7.0-RC13
    volumes:
      - './transmission/downloads:/data'
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:video.${SITE}'
      - 'traefik.port=8080'

  vpn:
    image: hwdsl2/ipsec-vpn-server:latest
    restart: always
    privileged: true
    environment:
      - 'VPN_IPSEC_PSK='
      - 'VPN_USER='
      - 'VPN_PASSWORD='
      - 'VPN_ADDL_USERS=' # space separated values
      - 'VPN_ADDL_PASSWORDS=' # space separated values
    ports:
      - '500:500'
      - '4500:4500/udp'
    volumes:
      - '/lib/modules:/lib/modules:ro'

  jupyter:
    image: jupyter/tensorflow-notebook:45f07a14b422
    restart: always
    command: >
     jupyter notebook
     --NotebookApp.token=''
     --NotebookApp.password=''
    environment:
      - 'JUPYTER_ENABLE_LAB=yes'
    volumes:
      - './jupyter/jupyter/config:/root/.jupyter/'
      - './jupyter/work:/work'
      - './jupyter/work:/home/jovyan/work'
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:jupyter.${SITE}'
      - 'traefik.port=8888'
      - 'traefik.frontend.auth.basic.users=${USERNAME}:${HASHED_PASSWORD}'

  pastebin:
    image: mkodockx/docker-pastebin:latest
    restart: always
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:paste.${SITE}'
      - 'traefik.port=80'

  nextcloud-db:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - './nextcloud/db:/var/lib/mysql'
    environment:
      - 'MYSQL_ROOT_PASSWORD=pass'
      - 'MYSQL_PASSWORD='
      - 'MYSQL_DATABASE=nextcloud'
      - 'MYSQL_USER=nextcloud'
    labels:
      - 'traefik.enable=false'

  nextcloud:
    image: nextcloud
    restart: always
    links:
      - nextcloud-db
    volumes:
      - './nextcloud/data:/var/www/html'
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:cloud.${SITE}'
      - 'traefik.port=80'

  sharelatex:
    restart: always
    image: sharelatex/sharelatex
    depends_on:
      - sharelatex-mongo
      - sharelatex-redis
    privileged: true
    links:
      - sharelatex-mongo
      - sharelatex-redis
    volumes:
      - './sharelatex/data:/var/lib/sharelatex'
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:latex.${SITE}'
      - 'traefik.port=80'
    environment:
      SHARELATEX_MONGO_URL: mongodb://sharelatex-mongo/sharelatex
      SHARELATEX_REDIS_HOST: sharelatex-redis
      SHARELATEX_APP_NAME: ${USERNAME}'s ShareLaTeX
      SHARELATEX_NAV_TITLE: ${SITE} - ShareLaTeX
      SHARELATEX_SITE_URL: https://latex.${SITE}
      SHARELATEX_HEADER_IMAGE_URL: http://somewhere.com/mylogo.png
      SHARELATEX_ADMIN_EMAIL: ${EMAIL}

  sharelatex-mongo:
    restart: always
    image: mongo
    expose:
      - 27017
    volumes:
      - ./sharelatex/mongo:/data/db
    labels:
      - 'traefik.enable=false'

  sharelatex-redis:
    restart: always
    image: redis
    expose:
      - 6379
    volumes:
      - ./sharelatex/redis/data:/data
    labels:
      - 'traefik.enable=false'

  jackett:
    image: linuxserver/jackett:v0.11.572-ls21
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - RUN_OPTS=-p 8080
    volumes:
      - ./jackett/config:/config
      - ./jackett/downloads:/downloads
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:jackett.${SITE}'
      - 'traefik.port=8080'

  blog-builder:
    image: jojomi/hugo:0.59
    restart: always
    environment:
    - HUGO_REFRESH_TIME=3600
    - HUGO_THEME=hugo-theme-cactus-plus
    - HUGO_BASEURL=/
    volumes:
      - ./blog/blog:/src
      - ./blog/nginx/conf/www:/output

  blog:
    image: nginx:stable-alpine
    depends_on:
      - blog-builder
    volumes:
      - './blog/nginx/conf:/etc/nginx/conf.d'
      - './blog/nginx/logs:/var/log/nginx/'
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:blog.${SITE}'
      - 'traefik.port=80'

  portainer:
    image: portainer/portainer
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './portainer/data:/data'
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:portainer.${SITE}'
      - 'traefik.port=9000'

  arachni:
    image: arachni/arachni
    networks:
      - 'srv'
    labels:
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:arachni.${SITE}'
      - 'traefik.port=9292'
